@using MigrationPortal.Helpers
@using Newtonsoft.Json
@model MigrationPortal.Models.LoginModel

@{
    Layout = null;
}

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1"> 
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />    
    <link href="~/Content/LoginStyle.css" rel="stylesheet" />       
    
    
</head>

<body class="bg-img">

    <section id="loginForm">
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = Request.QueryString["ReturnUrl"] }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
            @Html.AntiForgeryToken()            
            <div class="container-fluid" style="padding-top:10%;">
                <div class="row col-sm-5">
                    <div class="container">                      
                            <img src="~/Images/VAA_Logo.png" class="img-responsive"/>                     
                    </div>
                </div>
                <div class="row col-sm-3 col-sm-offset-0">                    
                        <div class="panel" style="border-radius:0px; padding:3%">
                            <div class="panel-heading" style="border-radius:0px;">
                                <h3 class="panel-title"> Login </h3>
                            </div>
                            <div class="panel-body">
                                <div class="form-group">
                                    <div class="input-group">
                                        <div class="input-group-addon" style="border-radius:0px">
                                            <span class="glyphicon glyphicon-user"></span>
                                        </div>
                                        @Html.TextBoxFor(m => Model.UserName, new { placeholder = "User ID", @class = "txt-input col-sm-2 form-control", @style = "border-radius:0px" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="input-group">
                                        <div class="input-group-addon" style="border-radius:0px">
                                            <span class="glyphicon glyphicon-lock" style="border-radius:0px"></span>
                                        </div>
                                        @Html.PasswordFor(m => Model.Password, new { placeholder = "Password", @class = "txt-input col-sm-2 form-control", @style = "border-radius:0px" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="input-group">
                                        <div class="checkbox" style="border-radius:0px">
                                            @Html.CheckBoxFor(m => Model.RememberMe, new { @class = "col-sm-6" })
                                            @Html.LabelFor(m => Model.RememberMe)
                                        </div>
                                    </div>                                        
                                </div> 
                                <div class="form-group">
                                    <div class="input-group">
                                        @Html.HiddenFor(m => Model.HostName, Model.HostName = Dns.GetHostName())
                                        @{
                                            string NICadapters = JsonConvert.SerializeObject(NetworkAdapterHelper.GetMac());
                                            @Html.Hidden("NICAdapters", NICadapters)
                                        }


                                        <input type="submit" value="Log in" class="btn btn-default btn-danger" style="border-radius:0px" />
                                    </div>
                                </div>
                               
                            </div>
                            @if (!Html.ViewData.ModelState.IsValid)
                            {
                                <div class="panel-footer">
                                    <span>
                                        @if (Html.HasValidationMessageFor((m => Model.UserName)) || Html.HasValidationMessageFor((m => Model.Password)))
                                        {
                                            @Html.ValidationMessageFor(m => Model.UserName, "Username / password field cannot be empty", new { @class = "text-danger help-block" })
                                        }


                                        @Html.ValidationSummary(true, "", new { @class = "text-danger help-block" })
                                    </span>
                                </div>
                            }

                        </div>

                    </div>
                                       
                </div>                          
            
             }        
        
    </section>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/Formator.js"></script>
    
</body>

</html>

